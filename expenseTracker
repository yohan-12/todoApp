import React, { useState, useReducer } from "react";
import "./App.css";

function App() {
  function AppReducer(state, action) {
    switch (action.type) {
      case 'DELETE-TRANSACTION':
        return {
          transactions: state.transactions.filter(trans => trans.id !== action.payload)
        }
      case 'ADD-TRANSACTION':
        return {
       
          transactions: [...state.transactions, action.payload]
        }
      default:
        return state;
    }
  }

  const initialState = {
    transactions: [
      { id: 1, text: "Flower", amount: -20 },
      { id: 2, text: "Salary", amount: 300 },
      { id: 3, text: "Book", amount: -10 },
      { id: 4, text: "Camera", amount: 150 },
    ],
  };
  const [text, setText] = useState("");
  const [amount, setAmount] = useState(0);
  const [state, dispatch] = useReducer(AppReducer, initialState);
  const amounts = state.transactions.map(transaction => transaction.amount)
  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);
  const income = amounts.filter(item => item > 0).reduce((acc, item) => acc += item, 0).toFixed(2)
  const expense = amounts.filter(item => item < 0).reduce((acc, item) => acc += item, 0).toFixed(2)
  const handleSubmit = (e) => {
    e.preventDefault();
    const newTransaction = {
      id: crypto.randomUUID(),
      text, 
      amount: parseInt(amount)
    }
    dispatch({
      type: "ADD-TRANSACTION", 
      payload: newTransaction
    })
  }


  return (
    <>
      <h2>Expense Tracker</h2>

      <div className="container">
        <h4>Your Balance</h4>
        <h1>${total}</h1>
      </div>

      <div className="inc-exp-container">
        <div>
          <h4>Income</h4>
          <p className="money plus">{income}</p>
        </div>
        <div>
          <h4>Expense</h4>
          <p className="money minus">{expense}</p>
        </div>
      </div>

      <ul className="list">
        {state.transactions.map((transaction) => {
          return (
            <li className={transaction.amount < 0 ? 'minus' : 'plus'} key={transaction.id}>
              {transaction.text} <span>{transaction.amount < 0 ? '-' : '+'}${Math.abs(transaction.amount)}</span>
              <button className="delete-btn" onClick={() => {
                dispatch({ type: 'DELETE-TRANSACTION', payload: transaction.id})
              }}>x</button>
            </li>
          );
        })}
      </ul>

      <h3>Add new transaction</h3>
      <form onSubmit={handleSubmit}>
        <div className="form-control">
          <label htmlFor="text">Text</label>
          <input
            type="text"
            value={text}
            onChange={(e) => setText(e.target.value)}
            placeholder="Enter text..."
          />
        </div>
        <div className="form-control">
          <label htmlFor="amount">
            Amount <br />
            (negative - expense, positive - income)
          </label>
          <input
            type="number"
            value={amount}
            onChange={(e) => setAmount(e.target.value)}
            placeholder="Enter amount..."
          />
        </div>
        <button className="btn">Add transaction</button>
      </form>
    </>
  );
}

export default App;
