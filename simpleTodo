import { useState, useEffect } from "react";
import "./style.css";

export default function App() {
  const [newItem, setNewItem] = useState("");
  const [todo, setTodo] = useState(() => {
    const localValue = localStorage.getItem("ITEMS")
    if (localValue == null) return []
    else return JSON.parse(localValue)
  });
  useEffect(() => {
    localStorage.setItem("ITEMS", JSON.stringify(todo))
  }, [todo]) //* any time our todo change, call this function/ this is already storing data in the local storage. Now we need to get this data. 
  const handleSubmit = (e) => {
    e.preventDefault();
    setTodo((currentTodos) => {
      return [
        ...currentTodos,
        {
          id: crypto.randomUUID(),
          title: newItem,
          completed: false,
        },
      ];
    });
    setNewItem("")
    //!  return [setTodo(currentVal => [...currentVal], id)]
  };
  // function toggleTodo(id, completed){
  //   setTodo(currentTodo => {
  //     if(currentTodo.id === id){
  //       return [...currentTodo, currentTodo.completed = completed]
  //     }else return 
  //   })
  // }
  function toggleTodo(id, completed){
    setTodo(currentTodo => {
      return currentTodo.map(todo => {
        if(todo.id === id ){
          return {...todo, completed}
        } else return todo 
      })
    })
  }
  function deleteTodo(id){
    setTodo(currentTodo => {
      return currentTodo.filter(todo => todo.id !== id 
      )
    })
  }

  return (
    <>
      <form onSubmit={handleSubmit} className="new-item-form">
        <div className="form-row">
          <label htmlFor="item">New Item</label>
          <input
            value={newItem}
            type="text"
            id="item"
            onChange={(e) => {
              setNewItem(e.target.value);
            }}
          />
        </div>
        <button className="btn">add</button>
      </form>
      <h2 className="header">Todo List</h2>

      <ul className="list">
        {todo.map((todo) => {
          // eslint-disable-next-line react/jsx-key
          return (
            <li key={todo.id}>
              <label>
                <input type="checkbox" checked={todo.completed} onChange={e=> toggleTodo(todo.id, e.target.checked)}/>
                {todo.title}
              </label>
              <button onClick={() => deleteTodo(todo.id)} className="btn btn-danger">Delete</button>
            </li>
          )
        })}
      </ul>
    </>
  );
}
