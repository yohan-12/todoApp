import { useState, useReducer } from "react";
import "./style.css";
import { Student } from "./Student";
const reducer = (state, action) => {
  switch (action.type) {
    case "add-student":
      const name = action.payload.name;
      const newStudent = {
        id: crypto.randomUUID(),
        name,
        isHere: false,
      };
      return {
        count: state.count + 1,
        students: [...state.students, newStudent],
      };
    case "delete-student":
      return {
        count: state.count - 1,
        students: state.students.filter(
          (student) => student.id !== action.payload.id
        ),
      };

    case "mark-student":
      return {
        count: state.count,
        students: state.students.map((student) => {
          if (student.id === action.payload.id) {
            return { ...student, isHere: !student.isHere };
          }
          return student;
        }),
      };

    default:
      return state;
  }
};

const initialState = {
  count: 0,
  students: [],
};

export default function App() {
  const [name, setName] = useState("");
  const [studentInfo, dispatch] = useReducer(reducer, initialState);

  return (
    <>
      <h1>Attendance</h1>
      <p>Total No. of Students: {studentInfo.count}</p>
      <input
        type="text"
        value={name}
        onChange={(e) => {
          setName(e.target.value);
        }}
      />
      <button
        onClick={() => {
          dispatch({ type: "add-student", payload: { name } });
        }}
      >
        Add
      </button>
      {studentInfo.students.map((student) => {
        return (
          <Student
            key={student.id}
            name={student.name}
            dispatch={dispatch}
            id={student.id}
            isHere={student.isHere}
          />
        );
      })}
    </>
  );
}
-----------------------------------------------------

export const Student = ({ name, dispatch, id, isHere }) => {
  return (
    <div style={{ padding:10 }}>
    <span style={{
        textDecoration: isHere ? 'line-through' : 'none',
        color: isHere ? 'gray' : 'black'
    }} onClick={() => {
        dispatch({type: 'mark-student', payload: { id }})
    }}>{name}</span>
    <button onClick={() => {
        dispatch({type: 'delete-student', payload: {id}})
    }} className='btn btn-danger'>Delete</button>
    </div>
  )
}
